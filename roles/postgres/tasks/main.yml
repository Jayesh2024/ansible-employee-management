---
- name: Add PostgreSQL repository key
  ansible.builtin.apt_key:
    url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
    state: present

- name: Add PostgreSQL repository
  ansible.builtin.apt_repository:
    repo: deb http://apt.postgresql.org/pub/repos/apt/ {{ ansible_distribution_release }}-pgdg main
    state: present

- name: Install PostgreSQL
  ansible.builtin.apt:
    name:
      - postgresql-14
      - postgresql-contrib
      - libpq-dev
      - python3-psycopg2
    state: present
    update_cache: true
  notify: restart postgresql

- name: Configure PostgreSQL to listen on all interfaces
  ansible.builtin.template:
    src: postgresql.conf.j2
    dest: /etc/postgresql/14/main/postgresql.conf
    owner: postgres
    group: postgres
    mode: '0644'
  notify: restart postgresql

- name: Configure PostgreSQL authentication
  ansible.builtin.template:
    src: pg_hba.conf.j2
    dest: /etc/postgresql/14/main/pg_hba.conf
    owner: postgres
    group: postgres
    mode: '0640'
  notify: restart postgresql

- name: Ensure PostgreSQL is started and enabled
  ansible.builtin.systemd:
    name: postgresql
    state: started
    enabled: true

- name: Create PostgreSQL database
  become_user: postgres
  community.postgresql.postgresql_db:
    name: "{{ db_name }}"
    encoding: UTF8
    lc_collate: en_US.UTF-8
    lc_ctype: en_US.UTF-8
    state: present

- name: Create PostgreSQL user
  become_user: postgres
  community.postgresql.postgresql_user:
    name: "{{ db_user }}"
    password: "{{ db_password }}"
    role_attr_flags: CREATEDB,SUPERUSER
    state: present

- name: Grant privileges to user
  become_user: postgres
  community.postgresql.postgresql_privs:
    db: "{{ db_name }}"
    role: "{{ db_user }}"
    privs: ALL
    type: database
    state: present
